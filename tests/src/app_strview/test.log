test str lit
test std::string
test std::string.c_str()
test strview
test strview2
test strview3
test char[13]
test char[14]
test char ptr
SV(" bla bla   	 

 yi ha   ")::split() = [ "bla", "bla", "yi", "ha" ]
SV(" bla bla   	 

 yi ha   ")::split(';') = [ " bla bla   	 

 yi ha   " ]
SV(" bla bla   	 

 yi ha   ")::splitTrimmed(';') = [ "bla bla   	 

 yi ha" ]
SV(" bla bla   	 

 yi ha   ")::splitTrimmedNoEmpty(';') = [ "bla bla   	 

 yi ha" ]
SV(" bla bla ; ha   ")::split() = [ "bla", "bla", ";", "ha" ]
SV(" bla bla ; ha   ")::split(';') = [ " bla bla ", " ha   " ]
SV(" bla bla ; ha   ")::splitTrimmed(';') = [ "bla bla", "ha" ]
SV(" bla bla ; ha   ")::splitTrimmedNoEmpty(';') = [ "bla bla", "ha" ]
SV(" bla bla ;;  ; ha   ")::split() = [ "bla", "bla", ";;", ";", "ha" ]
SV(" bla bla ;;  ; ha   ")::split(';') = [ " bla bla ", "", "  ", " ha   " ]
SV(" bla bla ;;  ; ha   ")::splitTrimmed(';') = [ "bla bla", "", "", "ha" ]
SV(" bla bla ;;  ; ha   ")::splitTrimmedNoEmpty(';') = [ "bla bla", "ha" ]
SV("")::split() = [ ]
SV("")::split(';') = [ "" ]
SV("")::splitTrimmed(';') = [ "" ]
SV("")::splitTrimmedNoEmpty(';') = [ ]
SV("  ")::split() = [ ]
SV("  ")::split(';') = [ "  " ]
SV("  ")::splitTrimmed(';') = [ "" ]
SV("  ")::splitTrimmedNoEmpty(';') = [ ]
SV(" ;  ")::split() = [ ";" ]
SV(" ;  ")::split(';') = [ " ", "  " ]
SV(" ;  ")::splitTrimmed(';') = [ "", "" ]
SV(" ;  ")::splitTrimmedNoEmpty(';') = [ ]
SV("; ")::split() = [ ";" ]
SV("; ")::split(';') = [ "", " " ]
SV("; ")::splitTrimmed(';') = [ "", "" ]
SV("; ")::splitTrimmedNoEmpty(';') = [ ]
SV(" ;")::split() = [ ";" ]
SV(" ;")::split(';') = [ " ", "" ]
SV(" ;")::splitTrimmed(';') = [ "", "" ]
SV(" ;")::splitTrimmedNoEmpty(';') = [ ]
