
################################################################################
##                                                                            ##
##  This file is part of NCrystal (see https://mctools.github.io/ncrystal/)   ##
##                                                                            ##
##  Copyright 2015-2024 NCrystal developers                                   ##
##                                                                            ##
##  Licensed under the Apache License, Version 2.0 (the "License");           ##
##  you may not use this file except in compliance with the License.          ##
##  You may obtain a copy of the License at                                   ##
##                                                                            ##
##      http://www.apache.org/licenses/LICENSE-2.0                            ##
##                                                                            ##
##  Unless required by applicable law or agreed to in writing, software       ##
##  distributed under the License is distributed on an "AS IS" BASIS,         ##
##  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  ##
##  See the License for the specific language governing permissions and       ##
##  limitations under the License.                                            ##
##                                                                            ##
################################################################################

cmake_minimum_required(VERSION 3.16...3.27)

#Fixme fix CMAKE_BUILD_TYPE here as well as in ncrystal_core subdir?

project( NCrystalRoot LANGUAGES C CXX )

set( NCRYSTAL_SKBUILD_MONOLITHIC "OFF" )
if ( DEFINED SKBUILD_PROJECT_NAME )
  message( STATUS
    "scikit-build mode detected. Will produce monolithic"
    " package including ncrystal-python contents." )
  set( NCRYSTAL_SKBUILD_MONOLITHIC "ON" )
endif()

add_subdirectory("${PROJECT_SOURCE_DIR}/ncrystal_core")
if ( NCRYSTAL_ENABLE_TESTING )
  enable_testing()
  add_subdirectory("${PROJECT_SOURCE_DIR}/tests")
endif()

if ( NCRYSTAL_SKBUILD_MONOLITHIC )
  set ( ncrystal_skbld_autogendir "${PROJECT_SOURCE_DIR}/skbld_autogen" )

  #Cleanup skbld_autogendir unless we are building FROM an sdist (or creating
  #one):
  if ( EXISTS "${ncrystal_skbld_autogendir}/is_sdist.txt"
      AND NOT "${SKBUILD_STATE}" STREQUAL "sdist" )
    message(STATUS "Running from sdist - will not clean autogenerated files")
  else()
    if ( IS_DIRECTORY "${ncrystal_skbld_autogendir}" )
      message( STATUS "Cleaning out ${ncrystal_skbld_autogendir}" )
      file( REMOVE_RECURSE "${ncrystal_skbld_autogendir}" )
    endif()
    file( MAKE_DIRECTORY "${ncrystal_skbld_autogendir}" )
    if ( "${SKBUILD_STATE}" STREQUAL "sdist" )
      file(TOUCH "${ncrystal_skbld_autogendir}/is_sdist.txt")
    endif()
  endif()

  # Monolithic install, include Python modules, but change the name of the
  # _is_std.py file to _is_monolithic.py, so the code knows how it is being used
  # (note we use separate files and not just variables inside files for this,
  # because that allows us to detect broken installations where
  # ncrystal-monolithic and ncrystal-python packages both clobber the same
  # directories.

  if ( NOT EXISTS "${ncrystal_skbld_autogendir}/NCrystal/_is_monolithic.py" )
    file(
      COPY "${PROJECT_SOURCE_DIR}/ncrystal_python/NCrystal"
      DESTINATION "${ncrystal_skbld_autogendir}"
    )
    file(
      RENAME
      "${ncrystal_skbld_autogendir}/NCrystal/_is_std.py"
      "${ncrystal_skbld_autogendir}/NCrystal/_is_monolithic.py"
    )
  endif()
endif()
#FIXME: We need CI which tests that our sdist packages are not missing any
#files. And from both monolithic and normal.
