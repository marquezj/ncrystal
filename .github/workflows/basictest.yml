name: basictest

on:
  push:
  pull_request:
  schedule:
    - cron: '30 18 * * 0'  # 18:30 every Sunday

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    strategy:
      matrix:
        include:
          - { os: ubuntu-20.04,  CC: gcc-10,   CXX: g++-10,     python: '3.8'  }
          - { os: ubuntu-22.04,  CC: gcc,      CXX: g++,        python: '3.9'  }
          - { os: ubuntu-latest, CC: gcc,      CXX: g++,        python: '3.10' }
          - { os: ubuntu-latest, CC: clang,    CXX: clang++,    python: '3.11' }
          - { os: ubuntu-latest, CC: gcc-12,   CXX: g++-12,     python: '3.12' }
          - { os: ubuntu-latest, CC: gcc,      CXX: g++,        python: '3.13' }
          - { os: macos-latest,  CC: clang,    CXX: clang++,    python: "3.12" }
          - { os: macos-13,      CC: clang,    CXX: clang++,    python: "3.11" }
    name: ${{ matrix.os }}.${{ matrix.CC }}.python-${{ matrix.python }}
    runs-on: ${{ matrix.os }}
    env:
      CC: ${{ matrix.CC }}
      CXX: ${{ matrix.CXX }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        path: src

    - name: Setup python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python }}

    - name: Pip install dependencies
      #Pin ASE due to https://gitlab.com/ase/ase/-/issues/1597 breaking 3.24
      run: python3 -m pip install numpy gemmi spglib ase==3.23.0 mpmath ruff matplotlib tomli

    - name: Configure CMake
      run: >
        cmake
        -S ${{github.workspace}}/src
        -B ${{github.workspace}}/build
        -DCMAKE_BUILD_TYPE=Release
        -DCMAKE_INSTALL_PREFIX=${{github.workspace}}/install
        -DNCRYSTAL_ENABLE_EXAMPLES=ON
        -DNCRYSTAL_BUILD_STRICT=ON
        -DNCRYSTAL_ENABLE_TESTING=ON
        -DMCTOOLS_REQUIRE_ALL_TEST_DEPS=ON

    - name: Build
      run: >
        cmake
        --build ${{github.workspace}}/build
        --config Release

    - name: CTest (from the build area)
      run: |
        set -eux
        cd ${{github.workspace}}/build
        ctest --output-on-failure --test-output-size-failed 100000 --test-output-truncation middle

